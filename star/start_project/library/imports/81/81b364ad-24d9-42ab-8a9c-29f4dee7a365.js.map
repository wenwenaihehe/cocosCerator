{"version":3,"sources":["assets\\scripts\\Starff.js"],"names":["cc","Class","Component","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","setScoreinGetStart","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE;AADJ,GAHP;AAOL;AAEEC,EAAAA,MATG,oBASO;AACN,SAAKD,UAAL,GAAkB,EAAlB;AACH,GAXE;AAaJE,EAAAA,iBAAiB,EAAE,6BAAY;AAC5B;AACA,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB,CAF4B,CAG5B;;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACH,GAnBI;AAqBLK,EAAAA,QAAQ,EAAE,oBAAW;AACjB;AACA,SAAKR,IAAL,CAAUS,YAAV;AACA,SAAKT,IAAL,CAAUU,kBAAV,GAHiB,CAIjB;;AACA,SAAKN,IAAL,CAAUO,OAAV;AACH,GA3BI;AA4BL;AAEA;AAECC,EAAAA,MAhCI,kBAgCIC,EAhCJ,EAgCQ;AACT,QAAI,KAAKf,iBAAL,KAA2B,KAAKF,UAApC,EAAgD;AAC5C;AACA,WAAKY,QAAL;AACA;AACH;;AACD,QAAIM,YAAY,GAAG,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAgB,KAAKf,IAAL,CAAUgB,YAAjD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKb,IAAL,CAAUc,OAAV,GAAoBD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAAjC;AACF;AAzCG,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n      onLoad () {\r\n          this.pickRadius = 60;\r\n      },\r\n     \r\n     getPlayerDistance: function () {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = this.node.position.sub(playerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function() {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        this.game.setScoreinGetStart();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    // start () {\r\n\r\n    // },\r\n\r\n     update (dt) {\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n        var minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n     },\r\n});\r\n"]}